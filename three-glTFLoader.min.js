/*! Built from Three.js r78 on 2016-09-13 */
var global=window;!function(a,b){"object"==typeof exports?b(module.exports):"function"==typeof define&&define.amd?define([],function(){return b(a)}):b(a)}(this,function(a){"use strict";var b=["extensions","buffers","bufferViews","images","videos","samplers","textures","shaders","programs","techniques","materials","accessors","meshes","cameras","lights","skins","nodes","animations","scenes"],c=Object.create(Object.prototype,{_rootDescription:{value:null,writable:!0},rootDescription:{set:function(a){this._rootDescription=a},get:function(){return this._rootDescription}},baseURL:{value:null,writable:!0},_isAbsolutePath:{value:function(a){var b=new RegExp("^"+window.location.protocol,"i");return!!a.match(b)}},resolvePathIfNeeded:{value:function(a){if(this._isAbsolutePath(a))return a;var b=/^data:/;return b.test(a)?a:this.baseURL+a}},_resolvePathsForCategories:{value:function(a){a.forEach(function(a){var b=this.json[a];if(b){var c=Object.keys(b);c.forEach(function(a){var c=b[a];c.uri=this.resolvePathIfNeeded(c.uri)},this)}},this)}},_json:{value:null,writable:!0},json:{enumerable:!0,get:function(){return this._json},set:function(a){this._json!==a&&(this._json=a,this._resolvePathsForCategories(["buffers","shaders","images","videos"]))}},_path:{value:null,writable:!0},getEntryDescription:{value:function(a,b){var c=null,d=b;return c=this.rootDescription[d],c?c?c[a]:null:(console.log("ERROR:CANNOT find expected category named:"+d),null)}},_stepToNextCategory:{value:function(){return this._state.categoryIndex=this.getNextCategoryIndex(this._state.categoryIndex+1),this._state.categoryIndex!==-1&&(this._state.categoryState.index=0,!0)}},_stepToNextDescription:{enumerable:!1,value:function(){var a=this._state.categoryState,b=a.keys;return b?(a.index++,a.keys=null,a.index>=b.length&&this._stepToNextCategory()):(console.log("INCONSISTENCY ERROR"),!1)}},hasCategory:{value:function(a){return!!this.rootDescription[a]}},_handleState:{value:function(){for(var a={buffers:this.handleBuffer,bufferViews:this.handleBufferView,shaders:this.handleShader,programs:this.handleProgram,techniques:this.handleTechnique,materials:this.handleMaterial,meshes:this.handleMesh,cameras:this.handleCamera,lights:this.handleLight,nodes:this.handleNode,scenes:this.handleScene,images:this.handleImage,animations:this.handleAnimation,accessors:this.handleAccessor,skins:this.handleSkin,samplers:this.handleSampler,textures:this.handleTexture,videos:this.handleVideo,extensions:this.handleExtension},c=!0;this._state.categoryIndex!==-1;){var d=b[this._state.categoryIndex],e=this._state.categoryState,f=e.keys;if(f||(e.keys=f=Object.keys(this.rootDescription[d]),!f||0!=f.length)){var g=d,h=f[e.index],i=this.getEntryDescription(h,g);if(i){if(a[g]&&a[g].call(this,h,i,this._state.userInfo)===!1){c=!1;break}this._stepToNextDescription()}else if(this.handleError){this.handleError("INCONSISTENCY ERROR: no description found for entry "+h),c=!1;break}}else this._stepToNextDescription()}this.handleLoadCompleted&&this.handleLoadCompleted(c)}},_loadJSONIfNeeded:{enumerable:!0,value:function(a){var b=this;if(this._json)a&&a(this.json);else{var c=this._path,d=c.lastIndexOf("/");this.baseURL=0!==d?c.substring(0,d+1):"";var e=new XMLHttpRequest;e.open("GET",c,!0),e.onreadystatechange=function(){4==e.readyState&&200==e.status&&(b.json=JSON.parse(e.responseText),a&&a(b.json))},e.send(null)}}},_buildLoader:{value:function(a){function b(b){c.rootDescription=b,a&&a(this)}var c=this;this._loadJSONIfNeeded(b)}},_state:{value:null,writable:!0},_getEntryType:{value:function(a){for(var c=b,d=0;d<c.length;d++){var e=this.rootDescription[c[d]];if(e)return c[d]}return null}},getNextCategoryIndex:{value:function(a){for(var c=a;c<b.length;c++)if(this.hasCategory(b[c]))return c;return-1}},load:{enumerable:!0,value:function(a,b){var c=this;this._buildLoader(function(d){var e=c.getNextCategoryIndex.call(c,0);e!==-1&&(c._state={userInfo:a,options:b,categoryIndex:e,categoryState:{index:"0"}},c._handleState())})}},initWithPath:{value:function(a){return this._path=a,this._json=null,this}},_knownURLs:{writable:!0,value:{}},loaderContext:{value:function(){return"undefined"==typeof this._knownURLs[this._path]&&(this._knownURLs[this._path]=Object.keys(this._knownURLs).length),"__"+this._knownURLs[this._path]}},initWithJSON:{value:function(a,b){return this.json=a,this.baseURL=b,b||console.log("WARNING: no base URL passed to Reader:initWithJSON"),this}}});return a&&(a.glTFParser=c),c}),THREE.glTFLoader=function(){this.meshesRequested=0,this.meshesLoaded=0,this.pendingMeshes=[],this.animationsRequested=0,this.animationsLoaded=0,this.animations=[],this.shadersRequested=0,this.shadersLoaded=0,this.shaders={},this.loadRequests=[],THREE.glTFShaders.removeAll(),THREE.Loader.call(this)},THREE.glTFLoader.prototype=new THREE.Loader,THREE.glTFLoader.prototype.constructor=THREE.glTFLoader,THREE.glTFLoader.prototype.load=function(url,callback){function RgbArraytoHex(a){if(!a)return 4294967295;var b=Math.floor(255*a[0]),c=Math.floor(255*a[1]),d=Math.floor(255*a[2]),e=255,f=(e<<24)+(b<<16)+(c<<8)+d;return f}function componentsPerElementForGLType(a){switch(a){case"SCALAR":nElements=1;break;case"VEC2":nElements=2;break;case"VEC3":nElements=3;break;case"VEC4":nElements=4;break;case"MAT2":nElements=4;break;case"MAT3":nElements=9;break;case"MAT4":nElements=16}return nElements}function replaceShaderDefinitions(shader,material){var program=material.params.program,shaderParams=material.params.technique.parameters,shaderAttributes=material.params.technique.attributes,params={};for(var attribute in material.params.attributes){var pname=shaderAttributes[attribute],shaderParam=shaderParams[pname],semantic=shaderParam.semantic;semantic&&(params[attribute]=shaderParam)}var s=shader,r="";for(var pname in params){var param=params[pname],semantic=param.semantic;switch(r=eval("/"+pname+"/g"),semantic){case"POSITION":s=s.replace(r,"position");break;case"NORMAL":s=s.replace(r,"normal");break;case"TEXCOORD_0":s=s.replace(r,"uv");break;case"WEIGHT":s=s.replace(r,"skinWeight");break;case"JOINT":s=s.replace(r,"skinIndex")}}return s}function replaceShaderSemantics(a){var b=theLoader.shaders[a.params.vertexShader];b&&(b=replaceShaderDefinitions(b,a),theLoader.shaders[a.params.vertexShader]=b)}function createShaderMaterial(a){replaceShaderSemantics(a);var b=theLoader.shaders[a.params.fragmentShader];if(!b)return console.log("ERROR: Missing fragment shader definition:",a.params.fragmentShader),new THREE.MeshPhongMaterial;var c=theLoader.shaders[a.params.vertexShader];if(!c)return console.log("ERROR: Missing vertex shader definition:",a.params.vertexShader),new THREE.MeshPhongMaterial;var d=THREE.UniformsUtils.clone(a.params.uniforms);for(uniform in a.params.uniforms){var e=a.params.uniforms[uniform],f=d[uniform];"t"==f.type&&(f.value=e.value)}var g=new THREE.RawShaderMaterial({fragmentShader:b,vertexShader:c,uniforms:d,transparent:a.params.transparent});return g}function LoadTexture(a){function b(a,b){var c=decodeURIComponent(b);return a?atob(c):c}function c(a,c){for(var d=b(a,c),e=new ArrayBuffer(d.length),f=new Uint8Array(e),g=0;g<d.length;g++)f[g]=d.charCodeAt(g);return e}function d(a,d){d="undefined"!=typeof d?d:"";var e=a[1],f=!!a[2],g=a[3];switch(d){case"":case"text":return b(f,g);case"ArrayBuffer":return c(f,g);case"blob":var h=c(f,g);return new Blob([h],{type:e});case"document":var i=new DOMParser;return i.parseFromString(b(f,g),e);case"json":return JSON.parse(b(f,g));default:throw"Unhandled responseType: "+d}}if(!a)return null;var e=function(a,b,c){var d=new Image;d.onload=function(){b(d)},"undefined"!=typeof c&&(d.onerror=c),d.src=a},f=/^data:(.*?)(;base64)?,(.*)$/,g=f.exec(a);if(null!==g){var h=new THREE.Texture,i=d(g,"blob"),j=window.URL.createObjectURL(i);return e(j,function(a){h.image=a,h.needsUpdate=!0}),h}return(new THREE.TextureLoader).load(a)}function CreateTexture(a,b){var c=null,d=null;if(b){var e=b;if(e){var f=a.getEntry(e);if(f){var g=a.getEntry(f.description.source);g&&(c=g.description.uri);var h=a.getEntry(f.description.sampler);h&&(d=h.description)}}}var e=LoadTexture(c);return e&&d&&(d.wrapS==WebGLRenderingContext.REPEAT&&(e.wrapS=THREE.RepeatWrapping),d.wrapT==WebGLRenderingContext.REPEAT&&(e.wrapT=THREE.RepeatWrapping),d.magFilter==WebGLRenderingContext.LINEAR&&(e.magFilter=THREE.LinearFilter)),e}var theLoader=this,ClassicGeometry=function(){this.geometry=new THREE.BufferGeometry,this.totalAttributes=0,this.loadedAttributes=0,this.indicesLoaded=!1,this.finished=!1,this.onload=null,this.uvs=null,this.indexArray=null};ClassicGeometry.prototype.constructor=ClassicGeometry,ClassicGeometry.prototype.buildBufferGeometry=function(){var a=this.geometry;a.setIndex(new THREE.BufferAttribute(this.indexArray,1));var b={start:0,index:0,count:this.indexArray.length};a.groups.push(b),a.computeBoundingSphere()},ClassicGeometry.prototype.checkFinished=function(){this.indexArray&&this.loadedAttributes===this.totalAttributes&&(this.buildBufferGeometry(),this.finished=!0,this.onload&&this.onload())};var IndicesDelegate=function(){};IndicesDelegate.prototype.handleError=function(a,b){console.log("ERROR(IndicesDelegate):"+a+":"+b)},IndicesDelegate.prototype.convert=function(a,b){return new Uint16Array(a,0,b.indices.count)},IndicesDelegate.prototype.resourceAvailable=function(a,b){var c=b.geometry;return c.indexArray=a,c.checkFinished(),!0};var indicesDelegate=new IndicesDelegate,IndicesContext=function(a,b){this.indices=a,this.geometry=b},VertexAttributeDelegate=function(){};VertexAttributeDelegate.prototype.handleError=function(a,b){console.log("ERROR(VertexAttributeDelegate):"+a+":"+b)},VertexAttributeDelegate.prototype.convert=function(a,b){return a},VertexAttributeDelegate.prototype.bufferResourceAvailable=function(a,b){var c,d,e,f=b.geometry,g=b.attribute,h=b.semantic;if("POSITION"==h)c=new Float32Array(a,0,g.count*componentsPerElementForGLType(g.type)),f.geometry.addAttribute("position",new THREE.BufferAttribute(c,3));else if("NORMAL"==h)e=componentsPerElementForGLType(g.type),c=new Float32Array(a,0,g.count*e),f.geometry.addAttribute("normal",new THREE.BufferAttribute(c,3));else if("TEXCOORD_0"==h||"TEXCOORD"==h){for(e=componentsPerElementForGLType(g.type),c=new Float32Array(a,0,g.count*e),d=0;d<c.length/2;d++)c[2*d+1]=1-c[2*d+1];f.geometry.addAttribute("uv",new THREE.BufferAttribute(c,e))}else"WEIGHT"==h?(e=componentsPerElementForGLType(g.type),c=new Float32Array(a,0,g.count*e),f.geometry.addAttribute("skinWeight",new THREE.BufferAttribute(c,e))):"JOINT"==h&&(e=componentsPerElementForGLType(g.type),c=new Float32Array(a,0,g.count*e),f.geometry.addAttribute("skinIndex",new THREE.BufferAttribute(c,e)))},VertexAttributeDelegate.prototype.resourceAvailable=function(a,b){this.bufferResourceAvailable(a,b);var c=b.geometry;return c.loadedAttributes++,c.checkFinished(),!0};var vertexAttributeDelegate=new VertexAttributeDelegate,VertexAttributeContext=function(a,b,c){this.attribute=a,this.semantic=b,this.geometry=c},Mesh=function(){this.primitives=[],this.materialsPending=[],this.loadedGeometry=0,this.onCompleteCallbacks=[]};Mesh.prototype.addPrimitive=function(a,b){var c=this;a.onload=function(){c.loadedGeometry++,c.checkComplete()},this.primitives.push({geometry:a,material:b,mesh:null})},Mesh.prototype.onComplete=function(a){this.onCompleteCallbacks.push(a)},Mesh.prototype.checkComplete=function(){var a=this;this.onCompleteCallbacks.length&&this.primitives.length==this.loadedGeometry&&(this.onCompleteCallbacks.forEach(function(b){b(a)}),this.onCompleteCallbacks=[])},Mesh.prototype.attachToNode=function(a){var b=this;this.primitives.forEach(function(c){var d=c.material,e=d.params;if(d instanceof THREE.Material||(d=createShaderMaterial(d)),!b.skin){var f=new THREE.Mesh(c.geometry.geometry,d);if(f.castShadow=!0,a.add(f),d instanceof THREE.ShaderMaterial){var g=new THREE.glTFShader(d,e,f,theLoader.rootObj);THREE.glTFShaders.add(g)}}})};var Material=function(a){this.params=a},AnimationParameterDelegate=function(){};AnimationParameterDelegate.prototype.handleError=function(a,b){console.log("ERROR(AnimationParameterDelegate):"+a+":"+b)},AnimationParameterDelegate.prototype.convert=function(a,b){var c=b.parameter,d=null;switch(c.type){case"SCALAR":case"VEC2":case"VEC3":case"VEC4":d=new Float32Array(a,0,c.count*componentsPerElementForGLType(c.type))}return d},AnimationParameterDelegate.prototype.resourceAvailable=function(a,b){var c=b.animation,d=b.parameter;return d.data=a,c.handleParameterLoaded(d),!0};var animationParameterDelegate=new AnimationParameterDelegate,AnimationParameterContext=function(a,b){this.parameter=a,this.animation=b},Animation=function(){this.totalParameters=0,this.loadedParameters=0,this.parameters={},this.finishedLoading=!1,this.onload=null};Animation.prototype.constructor=Animation,Animation.prototype.handleParameterLoaded=function(a){this.parameters[a.name]=a,this.loadedParameters++,this.checkFinished()},Animation.prototype.checkFinished=function(){this.loadedParameters===this.totalParameters&&(this.finishedLoading=!0,this.onload&&this.onload())};var InverseBindMatricesDelegate=function(){};InverseBindMatricesDelegate.prototype.handleError=function(a,b){console.log("ERROR(InverseBindMatricesDelegate):"+a+":"+b)},InverseBindMatricesDelegate.prototype.convert=function(a,b){var c=b.parameter,d=null;switch(c.type){case"MAT4":d=new Float32Array(a,0,c.count*componentsPerElementForGLType(c.type))}return d},InverseBindMatricesDelegate.prototype.resourceAvailable=function(a,b){var c=b.skin;return c.inverseBindMatrices=a,!0};var inverseBindMatricesDelegate=new InverseBindMatricesDelegate,InverseBindMatricesContext=function(a,b){this.parameter=a,this.skin=b},ShaderDelegate=function(){};ShaderDelegate.prototype.handleError=function(a,b){console.log("ERROR(ShaderDelegate):"+a+":"+b)},ShaderDelegate.prototype.convert=function(a,b){return a},ShaderDelegate.prototype.resourceAvailable=function(a,b){return theLoader.shadersLoaded++,theLoader.shaders[b.id]=a,!0};var shaderDelegate=new ShaderDelegate,ShaderContext=function(a,b){this.id=a,this.uri=b},ResourceEntry=function(a,b,c){this.entryID=a,this.object=b,this.description=c},Resources=function(){this._entries={}};Resources.prototype.setEntry=function(a,b,c){return a?(this._entries[a]&&console.warn("entry["+a+"] is being overwritten"),void(this._entries[a]=new ResourceEntry(a,b,c))):void console.error("No EntryID provided, cannot store",c)},Resources.prototype.getEntry=function(a){return this._entries[a]},Resources.prototype.clearEntries=function(){this._entries={}},LoadDelegate=function(){},LoadDelegate.prototype.loadCompleted=function(a,b){a.call(Window,b)};var ThreeGLTFLoader=Object.create(glTFParser,{load:{enumerable:!0,value:function(a,b){this.resources=new Resources,this.cameras=[],this.lights=[],this.animations=[],this.joints={},THREE.GLTFLoaderUtils.init(),glTFParser.load.call(this,a,b)}},cameras:{enumerable:!0,writable:!0,value:[]},lights:{enumerable:!0,writable:!0,value:[]},animations:{enumerable:!0,writable:!0,value:[]},handleBuffer:{value:function(a,b,c){return this.resources.setEntry(a,null,b),b.type="ArrayBuffer",!0}},handleBufferView:{value:function(a,b,c){this.resources.setEntry(a,null,b);var d=this.resources.getEntry(b.buffer);b.type="ArrayBufferView";var e=this.resources.getEntry(a);return e.buffer=d,!0}},handleShader:{value:function(a,b,c){this.resources.setEntry(a,null,b);var d={id:a,uri:b.uri},e=new ShaderContext(a,b.uri);return theLoader.shadersRequested++,THREE.GLTFLoaderUtils.getFile(d,shaderDelegate,e),!0}},handleProgram:{value:function(a,b,c){return this.resources.setEntry(a,null,b),!0}},handleTechnique:{value:function(a,b,c){return b.refCount=0,this.resources.setEntry(a,null,b),!0}},createShaderParams:{value:function(a,b,c,d,e){var f=this.resources.getEntry(d);if(c.uniforms={},c.attributes={},c.program=f,c.technique=e,f){c.fragmentShader=f.description.fragmentShader,c.vertexShader=f.description.vertexShader;for(var g in e.uniforms){var h,i,j=e.uniforms[g],k=e.parameters[j],l=k.type,m=k.count,n=b[j],o="";switch(l){case WebGLRenderingContext.FLOAT:if(o="f",h=k.value,"transparency"==j){var p=!0,q=p?n:1-n;h=q,c.transparent=!0}break;case WebGLRenderingContext.FLOAT_VEC2:if(o="v2",h=new THREE.Vector2,k&&k.value){var r=k.value;h.fromArray(r)}n&&h.fromArray(n);break;case WebGLRenderingContext.FLOAT_VEC3:if(o="v3",h=new THREE.Vector3,k&&k.value){var s=k.value;h.fromArray(s)}n&&h.fromArray(n);break;case WebGLRenderingContext.FLOAT_VEC4:if(o="v4",h=new THREE.Vector4,k&&k.value){var t=k.value;h.fromArray(t)}n&&h.fromArray(n);break;case WebGLRenderingContext.FLOAT_MAT2:console.log("Warning: FLOAT_MAT2");break;case WebGLRenderingContext.FLOAT_MAT3:if(o="m3",h=new THREE.Matrix3,k&&k.value){var u=k.value;h.fromArray(u)}n&&h.fromArray(n);break;case WebGLRenderingContext.FLOAT_MAT4:if(void 0!==m){o="m4v",h=new Array(m);for(var v=0;v<m;v++)h[v]=new THREE.Matrix4;if(i=m,k&&k.value){var w=k.value;h.fromArray(w)}n&&h.fromArray(n)}else{if(o="m4",h=new THREE.Matrix4,k&&k.value){var x=k.value;h.fromArray(x)}n&&h.fromArray(n)}break;case WebGLRenderingContext.SAMPLER_2D:o="t",h=n?CreateTexture(this.resources,n):null;break;default:throw new Error("Unknown shader uniform param type: "+l+" - "+theLoader.idx[l])}var y={type:o,value:h,length:i};c.uniforms[g]=y}for(var z in e.attributes){var j=e.attributes[z],A=e.parameters[j],B=A.type,C=A.semantic,D={type:B,semantic:C};c.attributes[z]=D}}}},threeJSMaterialType:{value:function(a,b,c){var d,e=b.extensions,f=e?e.KHR_materials_common:null,g=null;if(f){switch(f.technique){case"BLINN":case"PHONG":g=THREE.MeshPhongMaterial;break;case"LAMBERT":g=THREE.MeshLambertMaterial;break;case"CONSTANT":default:g=THREE.MeshBasicMaterial}f.doubleSided&&(c.side=THREE.DoubleSide),f.transparent&&(c.transparent=!0),d={};for(prop in f.values)d[prop]=f.values[prop]}else{var h=b.technique?this.resources.getEntry(b.technique):null;d=b.values;var i=h.description;++i.refCount>1;var j=i.program;this.createShaderParams(a,d,c,j,i);var k=!0;k&&(g=Material)}d.diffuse&&"string"==typeof d.diffuse&&(c.map=CreateTexture(this.resources,d.diffuse)),d.reflective&&"string"==typeof d.reflective&&(c.envMap=CreateTexture(this.resources,d.reflective));var l=d.shininesss||d.shininess;l&&(l=l);var m=null;c.map||(m=d.diffuse);var n=1;if(d.hasOwnProperty("transparency")){var o=!0;n=o?d.transparency:1-d.transparency}return c.color=RgbArraytoHex(m),c.opacity=n,c.transparent=n<1,c.map&&c.map.sourceFile.toLowerCase().indexOf(".png")!=-1&&(c.transparent=!0),void 0!==l&&(c.shininess=Math.max(l,1e-4)),delete c.ambient,void 0!==d.ambient&&"string"!=typeof d.ambient,void 0!==d.emission&&(c.emissive=RgbArraytoHex(d.emission)),void 0!==d.specular&&(c.specular=RgbArraytoHex(d.specular)),g}},handleMaterial:{value:function(a,b,c){var d={},e=this.threeJSMaterialType(a,b,d),f=new e(d);return this.resources.setEntry(a,f,b),!0}},handleMesh:{value:function(a,b,c){var d=new Mesh;this.resources.setEntry(a,d,b);var e=b.primitives;if(!e)return console.log("MISSING_PRIMITIVES for mesh:"+a),!1;for(var f=0;f<e.length;f++){var g=e[f];if(g.mode===WebGLRenderingContext.TRIANGLES){var h=new ClassicGeometry,i=this.resources.getEntry(g.material);d.addPrimitive(h,i.object);var j=Object.keys(g.attributes);j.forEach(function(a){h.totalAttributes++},this);var k=this.resources.getEntry(g.indices),l=this.resources.getEntry(k.description.bufferView),m={bufferView:l,byteOffset:k.description.byteOffset,count:k.description.count,id:k.entryID,componentType:k.description.componentType,type:k.description.type},n=new IndicesContext(m,h),o={indicesObject:m,indicesDelegate:indicesDelegate,indicesContext:n};theLoader.scheduleLoad(function(a){var b=THREE.GLTFLoaderUtils.getBuffer(a.indicesObject,a.indicesDelegate,a.indicesContext);b&&a.indicesDelegate.resourceAvailable(b,a.indicesContext)},o),j.forEach(function(a){var c,d=g.attributes[a],e=this.resources.getEntry(d);if(e){c=e.object,c.id=d;var f=this.resources.getEntry(c.bufferView)}else{c=b.attributes[d],c.id=d,this.resources.setEntry(d,c,c);var f=this.resources.getEntry(c.bufferView);e=this.resources.getEntry(d)}var i={bufferView:f,byteOffset:c.byteOffset,byteStride:c.byteStride,count:c.count,max:c.max,min:c.min,componentType:c.componentType,type:c.type,id:d},j=new VertexAttributeContext(i,a,h),k={attributeObject:i,vertexAttributeDelegate:vertexAttributeDelegate,attribContext:j};theLoader.scheduleLoad(function(a){var b=THREE.GLTFLoaderUtils.getBuffer(a.attributeObject,a.vertexAttributeDelegate,a.attribContext);b&&a.vertexAttributeDelegate.resourceAvailable(b,a.attribContext)},k)},this)}}return!0}},handleCamera:{value:function(a,b,c){var d;if("perspective"==b.type){var e=b.perspective.znear,f=b.perspective.zfar,g=b.perspective.yfov,h=b.perspective.xfov,i=b.perspective.aspect_ratio;i||(i=1),void 0===h&&g&&(h=g*i),void 0===g&&h&&(g=h/i),h&&(h=THREE.Math.radToDeg(h),d=new THREE.PerspectiveCamera(h,i,e,f))}else d=new THREE.OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,e,f);return d&&this.resources.setEntry(a,d,b),!0}},handleLight:{value:function(a,b,c){var d=null,e=b.type;if(e&&b[e]){var f=b[e],g=RgbArraytoHex(f.color);switch(e){case"directional":d=new THREE.DirectionalLight(g),d.position.set(0,0,1);break;case"point":d=new THREE.PointLight(g);break;case"spot ":d=new THREE.SpotLight(g),d.position.set(0,0,1);break;case"ambient":d=new THREE.AmbientLight(g)}}return d&&this.resources.setEntry(a,d,b),!0}},addPendingMesh:{value:function(a,b){theLoader.pendingMeshes.push({mesh:a,node:b})}},handleNode:{value:function(a,b,c){var d=null;b.jointName?(d=new THREE.Bone,d.jointName=b.jointName,this.joints[b.jointName]=a):d=new THREE.Object3D,d.name=b.name,d.glTFID=a,d.glTF=b,this.resources.setEntry(a,d,b);var e=b.matrix;if(e)d.matrixAutoUpdate=!1,d.applyMatrix((new THREE.Matrix4).set(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]));else{var f=b.translation,g=b.rotation,h=b.scale,i=f?new THREE.Vector3(f[0],f[1],f[2]):new THREE.Vector3,j=g?new THREE.Quaternion(g[0],g[1],g[2],g[3]):new THREE.Quaternion,k=h?new THREE.Vector3(h[0],h[1],h[2]):new THREE.Vector3(1,1,1),l=new THREE.Matrix4;l.compose(i,j,k),d.matrixAutoUpdate=!1,d.applyMatrix(l)}var m=this;if(b.meshes){b.meshInstances={};var n;b.skin&&(n=this.resources.getEntry(b.skin)),b.meshes.forEach(function(a){meshEntry=this.resources.getEntry(a),theLoader.meshesRequested++,meshEntry.object.onComplete(function(c){m.addPendingMesh(c,d),b.meshInstances[a]=meshEntry.object,n&&(c.skin=n,b.instanceSkin=n.object),theLoader.meshesLoaded++,theLoader.checkComplete()})},this)}if(b.camera){var o=this.resources.getEntry(b.camera);o&&(d.add(o.object),this.cameras.push(o.object))}if(b.extensions&&b.extensions.KHR_materials_common&&b.extensions.KHR_materials_common.light){var p=b.extensions.KHR_materials_common.light,q=this.resources.getEntry(p);q&&(d.add(q.object),this.lights.push(q.object))}return!0}},handleExtension:{value:function(a,b,c){switch(a){case"KHR_materials_common":var d=b.lights;for(lightID in d){var e=d[lightID];this.handleLight(lightID,e)}}return!0}},buildNodeHirerachy:{value:function(a,b){var c=this.resources.getEntry(a),d=c.object;b.add(d);var e=c.description.children;return e&&e.forEach(function(a){this.buildNodeHirerachy(a,d)},this),d}},buildSkin:{value:function(a){var b=a.glTF,c=b.instanceSkin,d=b.skeletons;c&&d.forEach(function(d){var e=this.resources.getEntry(d);if(e){var f=e.object;a.add(f);var g=!0;for(meshID in b.meshInstances){var h=b.meshInstances[meshID],i=null;h.primitives.forEach(function(b){var e=b.material,f=e.params;e instanceof THREE.Material||(e=createShaderMaterial(e)),i=new THREE.SkinnedMesh(b.geometry.geometry,e,!1);b.geometry.geometry;if(i&&g){e.skinning=!0;var h,j=c.jointNames,k=[],l=[],m=[],n=j.length;for(h=0;h<n;h++){var o=j[h],p=this.joints[o],q=this.resources.getEntry(p).object;if(q){q.skin=i,k.push(q),l.push(q);var r=c.inverseBindMatrices,s=(new THREE.Matrix4).set(r[16*h+0],r[16*h+4],r[16*h+8],r[16*h+12],r[16*h+1],r[16*h+5],r[16*h+9],r[16*h+13],r[16*h+2],r[16*h+6],r[16*h+10],r[16*h+14],r[16*h+3],r[16*h+7],r[16*h+11],r[16*h+15]);m.push(s)}else console.log("WARNING: jointName:"+o+" cannot be found in skeleton:"+d)}i.bind(new THREE.Skeleton(l,m,!1),c.bindShapeMatrix)}if(i&&(i.castShadow=!0,a.add(i),e instanceof THREE.ShaderMaterial)){f.joints=k;var t=new THREE.glTFShader(e,f,i,theLoader.rootObj);THREE.glTFShaders.add(t)}},this)}}},this)}},buildSkins:{value:function(a){a.glTF&&a.glTF.instanceSkin&&this.buildSkin(a);var b=a.children;b&&b.forEach(function(a){this.buildSkins(a)},this)}},createMeshAnimations:{value:function(a){this.buildSkins(a)}},handleScene:{value:function(a,b,c){return b.nodes?(b.nodes.forEach(function(a){this.buildNodeHirerachy(a,c.rootObj)},this),this.delegate&&this.delegate.loadCompleted(c.callback,c.rootObj),theLoader.loadAllAssets(),!0):(console.log("ERROR: invalid file required nodes property is missing from scene"),!1)}},handleImage:{value:function(a,b,c){return this.resources.setEntry(a,null,b),!0}},addNodeAnimationChannel:{value:function(a,b,c){this.nodeAnimationChannels||(this.nodeAnimationChannels={}),this.nodeAnimationChannels[a]||(this.nodeAnimationChannels[a]=[]),this.nodeAnimationChannels[a].push(c)}},createAnimations:{value:function(){for(var a in this.nodeAnimationChannels){var b=this.nodeAnimationChannels[a],c=(b.length,new THREE.glTFAnimation(b));c.name="animation_"+a,this.animations.push(c)}}},buildAnimation:{value:function(a){var b,c=[],d=a.channels.length;for(b=0;b<d;b++){var e=a.channels[b],f=a.samplers[e.sampler];if(f){var g=a.parameters[f.input];if(g&&g.data){var h=a.parameters[f.output];if(h&&h.data){var i=e.target,j=this.resources.getEntry(i.id);if(j){var k=i.path,l={keys:g.data,values:h.data,count:g.count,target:j.object,path:k,type:f.interpolation};this.addNodeAnimationChannel(i.id,e,l),c.push(l)}}}}}}},handleAnimation:{value:function(a,b,c){theLoader.animationsRequested++;var d=new Animation;d.name=a,d.onload=function(){theLoader.animationsLoaded++,theLoader.animations.push(d),theLoader.checkComplete()},d.channels=b.channels,d.samplers=b.samplers,this.resources.setEntry(a,d,b);var e=b.parameters;if(!e)return console.log("MISSING_PARAMETERS for animation:"+a),!1;var f=Object.keys(e);f.forEach(function(a){d.totalParameters++},this);var f=Object.keys(e);return f.forEach(function(a){var b=e[a],c=this.resources.getEntry(b);c=c.object;var f=this.resources.getEntry(c.bufferView),g={bufferView:f,byteOffset:c.byteOffset,count:c.count,componentType:c.componentType,type:c.type,id:c.bufferView,name:a},h=new AnimationParameterContext(g,d),i={paramObject:g,animationParameterDelegate:animationParameterDelegate,paramContext:h};theLoader.scheduleLoad(function(a){var b=THREE.GLTFLoaderUtils.getBuffer(a.paramObject,a.animationParameterDelegate,a.paramContext);b&&a.animationParameterDelegate.resourceAvailable(b,a.paramContext)},i)},this),!0}},handleAccessor:{value:function(a,b,c){return this.resources.setEntry(a,b,b),!0}},handleSkin:{value:function(a,b,c){var d={},e=b.bindShapeMatrix;d.bindShapeMatrix=(new THREE.Matrix4).set(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]),d.jointNames=b.jointNames;var f=this.resources.getEntry(b.inverseBindMatrices);f=f.description,d.inverseBindMatricesDescription=f,d.inverseBindMatricesDescription.id=b.inverseBindMatrices;var g=this.resources.getEntry(f.bufferView),h={bufferView:g,byteOffset:f.byteOffset,count:f.count,componentType:f.componentType,type:f.type,id:f.bufferView,name:d.inverseBindMatricesDescription.id},i=new InverseBindMatricesContext(h,d),j={paramObject:h,inverseBindMatricesDelegate:inverseBindMatricesDelegate,context:i};theLoader.scheduleLoad(function(a){var b=THREE.GLTFLoaderUtils.getBuffer(a.paramObject,a.inverseBindMatricesDelegate,a.context);b&&a.inverseBindMatricesDelegate.resourceAvailable(b,a.context)},j);var k=this.resources.getEntry(d.inverseBindMatricesDescription.bufferView);return d.inverseBindMatricesDescription.bufferView=k.object,this.resources.setEntry(a,d,b),!0}},handleSampler:{value:function(a,b,c){return this.resources.setEntry(a,b,b),!0}},handleTexture:{value:function(a,b,c){return this.resources.setEntry(a,null,b),!0}},handleError:{value:function(a){throw new Error(a)}},_delegate:{value:new LoadDelegate,writable:!0},delegate:{enumerable:!0,get:function(){return this._delegate},set:function(a){this._delegate=a}}}),Context=function(a,b){this.rootObj=a,this.callback=b},rootObj=new THREE.Object3D,self=this,loader=Object.create(ThreeGLTFLoader);return loader.initWithPath(url),loader.load(new Context(rootObj,function(a){}),null),this.loader=loader,this.callback=callback,this.rootObj=rootObj,rootObj},THREE.glTFLoader.prototype.scheduleLoad=function(a,b){this.loadRequests.push({fn:a,data:b})},THREE.glTFLoader.prototype.loadAllAssets=function(){for(var a=0,b=this.loadRequests.length;a<b;a++){var c=this.loadRequests[a];c.fn(c.data)}},THREE.glTFLoader.prototype.callLoadedCallback=function(){var a={scene:this.rootObj,cameras:this.loader.cameras,animations:this.loader.animations,shaders:this.loader.shaders};this.callback(a)},THREE.glTFLoader.prototype.checkComplete=function(){if(this.meshesLoaded==this.meshesRequested&&this.shadersLoaded==this.shadersRequested&&this.animationsLoaded==this.animationsRequested){for(var a=0;a<this.pendingMeshes.length;a++){var b=this.pendingMeshes[a];b.mesh.attachToNode(b.node)}for(var a=0;a<this.animationsLoaded;a++){var c=this.animations[a];this.loader.buildAnimation(c)}this.loader.createAnimations(),this.loader.createMeshAnimations(this.rootObj),THREE.glTFShaders.bindShaderParameters(this.rootObj),this.callLoadedCallback()}},THREE.GLTFLoaderUtils=Object.create(Object,{MISSING_DESCRIPTION:{value:"MISSING_DESCRIPTION"},INVALID_PATH:{value:"INVALID_PATH"},INVALID_TYPE:{value:"INVALID_TYPE"},XMLHTTPREQUEST_STATUS_ERROR:{value:"XMLHTTPREQUEST_STATUS_ERROR"},NOT_FOUND:{value:"NOT_FOUND"},ARRAY_BUFFER:{value:"ArrayBuffer"},_streams:{value:{},writable:!0},_streamsStatus:{value:{},writable:!0},_resources:{value:{},writable:!0},_resourcesStatus:{value:{},writable:!0},init:{value:function(){this._streams={},this._streamsStatus={},this._resources={},this._resourcesStatus={}}},_containsResource:{enumerable:!1,value:function(a){return!!this._resources[a]}},_storeResource:{enumerable:!1,value:function(a,b){return a?(this._containsResource[a]&&console.log("WARNING: resource:"+a+" is already stored, overriding"),void(this._resources[a]=b)):void console.log("ERROR: entry does not contain id, cannot store")}},_getResource:{enumerable:!1,value:function(a){return this._resources[a]}},_loadStream:{value:function(a,b,c){function d(a,b){var c=decodeURIComponent(b);return a?atob(c):c}function e(a,b){for(var c=d(a,b),e=new ArrayBuffer(c.length),f=new Uint8Array(e),g=0;g<c.length;g++)f[g]=c.charCodeAt(g);return e}function f(a,b){b="undefined"!=typeof b?b:"";var c=a[1],f=!!a[2],g=a[3];switch(b){case"":case"text":return d(f,g);case"ArrayBuffer":return e(f,g);case"blob":var h=e(f,g);return new Blob([h],{type:c});case"document":var i=new DOMParser;return i.parseFromString(d(f,g),c);case"json":return JSON.parse(d(f,g));default:throw"Unhandled responseType: "+b}}var g=/^data:(.*?)(;base64)?,(.*)$/,h=g.exec(a);if(null!==h)return void c.streamAvailable(a,f(h,b));if(!b)return void c.handleError(THREE.GLTFLoaderUtils.INVALID_TYPE,null);if(!a)return void c.handleError(THREE.GLTFLoaderUtils.INVALID_PATH);var i=new XMLHttpRequest;i.open("GET",a,!0),i.responseType=b===this.ARRAY_BUFFER?"arraybuffer":"text",i.setRequestHeader("If-Modified-Since","Sat, 01 Jan 1970 00:00:00 GMT"),i.onload=function(b){200==i.status||206==i.status?c.streamAvailable(a,i.response):c.handleError(THREE.GLTFLoaderUtils.XMLHTTPREQUEST_STATUS_ERROR,this.status)},i.send(null)}},send:{value:0,writable:!0},requested:{value:0,writable:!0},_handleRequest:{value:function(a){var b=this._resourcesStatus[a.id];b?this._resourcesStatus[a.id]++:this._resourcesStatus[a.id]=1;
var c=this._streamsStatus[a.uri];if(c&&"loading"===c.status)return void c.requests.push(a);this._streamsStatus[a.uri]={status:"loading",requests:[a]};var d=this,e={};e.streamAvailable=function(a,b){var c=d._streamsStatus[a],e=c.requests;e.forEach(function(a){var c=b.slice(a.range[0],a.range[1]),e=a.delegate.convert(c,a.ctx);d._storeResource(a.id,e),a.delegate.resourceAvailable(e,a.ctx),--d._resourcesStatus[a.id]},this),delete d._streamsStatus[a]},e.handleError=function(b,c){a.delegate.handleError(b,c)},this._loadStream(a.uri,a.type,e)}},_elementSizeForGLType:{value:function(a,b){var c=0;switch(b){case"SCALAR":c=1;break;case"VEC2":c=2;break;case"VEC3":c=3;break;case"VEC4":c=4;break;case"MAT2":c=4;break;case"MAT3":c=9;break;case"MAT4":c=16}switch(a){case WebGLRenderingContext.FLOAT:return Float32Array.BYTES_PER_ELEMENT*c;case WebGLRenderingContext.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT*c;case WebGLRenderingContext.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT*c;default:return null}}},_handleWrappedBufferViewResourceLoading:{value:function(a,b,c){var d=a.bufferView,e=d.buffer,f=a.byteOffset+d.description.byteOffset,g=[f,this._elementSizeForGLType(a.componentType,a.type)*a.count+f];this._handleRequest({id:a.id,range:g,type:e.description.type,uri:e.description.uri,delegate:b,ctx:c},null)}},getBuffer:{value:function(a,b,c){this._getResource(a.id);return this._handleWrappedBufferViewResourceLoading(a,b,c),null}},getFile:{value:function(a,b,c){return a.delegate=b,a.ctx=c,this._handleRequest({id:a.id,uri:a.uri,range:[0],type:"text",delegate:b,ctx:c},null),null}}}),THREE.glTFShaders=function(){var a=[];return{add:function(b){a.push(b)},remove:function(b){var c=a.indexOf(b);c!==-1&&a.splice(c,1)},removeAll:function(b){a=[]},bindShaderParameters:function(b){for(i=0;i<a.length;i++)a[i].bindParameters(b)},update:function(b,c){for(i=0;i<a.length;i++)a[i].update(b,c)}}}(),THREE.glTFShader=function(a,b,c,d){this.material=a,this.parameters=b.technique.parameters,this.uniforms=b.technique.uniforms,this.joints=b.joints,this.object=c,this.semantics={},this.m4=new THREE.Matrix4},THREE.glTFShader.prototype.bindParameters=function(a){function b(a,b){a.glTFID==e.node&&(b.sourceObject=a)}for(var c in this.uniforms){var d=this.uniforms[c],e=this.parameters[d];if(e.semantic){var f={semantic:e.semantic,uniform:this.material.uniforms[c]};e.node?a.traverse(function(a){b(a,f)}):f.sourceObject=this.object,this.semantics[d]=f}}},THREE.glTFShader.prototype.update=function(a,b){a.updateMatrixWorld(),b.updateMatrixWorld(),b.matrixWorldInverse.getInverse(b.matrixWorld);for(var c in this.semantics){var d=this.semantics[c];if(d)switch(d.semantic){case"MODELVIEW":var e=d.uniform.value;e.multiplyMatrices(b.matrixWorldInverse,d.sourceObject.matrixWorld);break;case"MODELVIEWINVERSETRANSPOSE":var f=d.uniform.value;this.m4.multiplyMatrices(b.matrixWorldInverse,d.sourceObject.matrixWorld),f.getNormalMatrix(this.m4);break;case"PROJECTION":var e=d.uniform.value;e.copy(b.projectionMatrix);break;case"JOINTMATRIX":for(var g=d.uniform.value,h=0;h<g.length;h++)g[h].getInverse(d.sourceObject.matrixWorld).multiply(this.joints[h].matrixWorld).multiply(this.object.skeleton.boneInverses[h]);break;default:throw new Error("Unhandled shader semantic"+d)}}};